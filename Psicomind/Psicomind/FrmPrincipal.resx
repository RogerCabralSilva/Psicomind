<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ctz/A9Tz2XvqMpf4AAAAAElFTkSuQmCC
</value>
  </data>
</root>